{"version":3,"sources":["homepage-header.jpg","browse-header.jpg","Components/ShowCard/index.jsx","Views/Homepage/index.jsx","Services/singleShow.js","Services/casts.js","Services/seasons.js","Services/episodes.js","Views/SingleShow/index.jsx","Components/Search/index.jsx","Views/Browse/index.jsx","Views/SingleCast/index.jsx","Views/SingleEpisode/index.jsx","Components/Navigation/index.jsx","App.jsx","Services/shows.js","index.jsx"],"names":["module","exports","ShowCard","props","rating","Math","floor","average","empty","stars","emptyStars","i","push","className","href","id","src","image","medium","alt","name","map","star","index","key","Object","values","genres","join","Homepage","style","backgroundImage","bannerImg","shows","show","premiered","singleShow","showId","Promise","resolve","reject","axios","get","then","result","data","catch","getCasts","casts","getSeasons","seasons","getEpisodes","episodes","SingleShow","randomKey","length","characters","charactersLength","charAt","random","filter","event","preventDefault","target","value","setState","state","cast","season","this","fetchData","match","params","console","log","window","scrollTo","top","behavior","single","showImg","networkName","scheduleDay","scheduleTime","showGenres","showRating","Number","original","network","schedule","days","time","alternativeRating","summary","status","language","to","pathname","person","onClick","scrollToTop","character","onChange","number","airdate","runtime","Component","Search","startSearch","search","type","placeholder","autoComplete","Browse","searchShows","word","currentTarget","dataset","data-id","genre","toLowerCase","includes","SingleCast","error","location","birthday","country","SingleEpisode","episode","airtime","Navigation","App","path","render","exact","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ab47451f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/homepage-header.c0166256.jpg\";","module.exports = __webpack_public_path__ + \"static/media/browse-header.42f99941.jpg\";","import React from 'react';\nimport './style.scss';\n\nconst ShowCard = (props) => {\n  const rating = Math.floor(props.rating.average / 2);\n  const empty = 5 - rating;\n  const stars = [];\n  const emptyStars = [];\n  for (let i = 0; i < rating; i++) {\n    stars.push(<i className=\"fas fa-star\"></i>);\n  }\n  for (let i = 0; i < empty; i++) {\n    emptyStars.push(<i className=\"far fa-star\"></i>);\n  }\n\n  return (\n    <a href={`/show/${props.id}`}>\n      <div className=\"showcard hvr-float\">\n        <img src={props.image.medium} alt={props.name} />\n        <h4>{props.name}</h4>\n        {stars.map((star, index) => {\n          return <span key={index}>{star}</span>;\n        })}\n        {emptyStars.map((star, index) => {\n          return <span key={index}>{star}</span>;\n        })}\n        <h6>{Object.values(props.genres).join(' | ')}</h6>\n      </div>\n    </a>\n  );\n};\n\nexport default ShowCard;\n","import React from 'react';\nimport './style.scss';\n\nimport bannerImg from './../../homepage-header.jpg';\n\nimport ShowCard from './../../Components/ShowCard';\n\nconst Homepage = (props) => {\n  return (\n    <>\n      <div className=\"overlay\">\n        <header\n          className=\"centered-header homepage-banner-image\"\n          style={{\n            backgroundImage: `url(${bannerImg})`,\n          }}\n        ></header>\n      </div>\n      <section className=\"overlay-section\">\n        <h1>TV Bland</h1>\n        <h2>See all your favourite TV series and shows here.</h2>\n        <h2>\n          Find the lastest added shows, browse by genre and see all the seasons & episodes for your\n          shows and more!\n        </h2>\n        <a href=\"/browse\">\n          <button>Browse All</button>\n        </a>\n      </section>\n      <main className=\"container\">\n        <h3>Last Added Shows</h3>\n        <section className=\"display-flex homepage\">\n          {props.shows.map((show) => {\n            // showing the lastest seasons that have premiered by date\n            if (show.premiered > '2014-01-12') {\n              // only showing data that is complete this removes any seasons without a rating\n              if (show.rating.average !== null) {\n                return <ShowCard key={show.id} {...show} />;\n              }\n            }\n          })}\n        </section>\n      </main>\n    </>\n  );\n};\n\nexport default Homepage;\n","import axios from 'axios';\n\nconst singleShow = (showId) =>\n  new Promise((resolve, reject) => {\n    axios\n      .get(`https://api.tvmaze.com/shows/${showId}?embed[]=seasons&embed[]=cast`)\n      .then((result) => {\n        const shows = result.data;\n        resolve(shows);\n      })\n      .catch(reject);\n  });\n\nexport { singleShow };\n","import axios from 'axios';\n\nconst getCasts = (showId) =>\n  new Promise((resolve, reject) => {\n    axios\n      .get(`https://api.tvmaze.com/shows/${showId}/cast`)\n      .then((result) => {\n        const casts = result.data;\n        resolve(casts);\n      })\n      .catch(reject);\n  });\n\nexport { getCasts };\n","import axios from 'axios';\n\nconst getSeasons = (showId) =>\n  new Promise((resolve, reject) => {\n    axios\n      .get(`https://api.tvmaze.com/shows/${showId}/seasons`)\n      .then((result) => {\n        const seasons = result.data;\n        resolve(seasons);\n      })\n      .catch(reject);\n  });\n\nexport { getSeasons };\n","import axios from 'axios';\n\nconst getEpisodes = (showId) =>\n  new Promise((resolve, reject) => {\n    axios\n      .get(`https://api.tvmaze.com/shows/${showId}/episodes`)\n      .then((result) => {\n        const episodes = result.data;\n        resolve(episodes);\n      })\n      .catch(reject);\n  });\n\nexport { getEpisodes };\n","import React, { Component } from 'react';\nimport './style.scss';\n\nimport { Link } from 'react-router-dom';\n\nimport { singleShow } from './../../Services/singleShow';\nimport { getCasts } from './../../Services/casts';\nimport { getSeasons } from './../../Services/seasons';\nimport { getEpisodes } from './../../Services/episodes';\n\nclass SingleShow extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      singleShow: [],\n      cast: [],\n      season: [],\n      episodes: [],\n      filter: '',\n    };\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  async fetchData() {\n    this.setState({\n      filter: 'Season 1',\n    });\n\n    try {\n      await singleShow(this.props.match.params.id).then((show) => {\n        this.setState({\n          singleShow: show,\n        });\n      });\n      await getCasts(this.props.match.params.id).then((cast) => {\n        this.setState({\n          cast: cast,\n        });\n      });\n      await getSeasons(this.props.match.params.id).then((season) => {\n        this.setState({\n          season: season,\n        });\n      });\n      await getEpisodes(this.props.match.params.id).then((episodes) => {\n        this.setState({\n          episodes: episodes,\n        });\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  randomKey = (length) => {\n    let result = '';\n    let characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    let charactersLength = characters.length;\n    for (let i = 0; i < length; i++) {\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n  };\n\n  filter = (event) => {\n    event.preventDefault();\n    const filter = event.target.value;\n\n    this.setState({\n      filter,\n    });\n  };\n\n  scrollToTop() {\n    window.scrollTo({ top: 0, behavior: 'smooth' });\n  }\n\n  render() {\n    const single = this.state.singleShow;\n    const cast = this.state.cast;\n    const season = this.state.season;\n    const episodes = this.state.episodes;\n\n    // variables declared to then be assigned value by mapping props inherited from app\n    let showImg = '';\n    let networkName = '';\n    let scheduleDay = '';\n    let scheduleTime = '';\n    let showGenres = '';\n    let showRating = '';\n\n    this.props.shows.map((show) => {\n      if (show.id === Number(this.props.match.params.id)) {\n        showImg = show.image.original;\n        networkName = show.network.name;\n        scheduleDay = show.schedule.days;\n        scheduleTime = show.schedule.time;\n        showGenres = Object.values(show.genres).join(' , ');\n        showRating = show.rating.average;\n      }\n    });\n\n    // calculating the rating and adding the fontawesome stars to create the visual rating\n    const rating = Math.floor(showRating / 2);\n    const alternativeRating = showRating / 2;\n    const empty = 5 - rating;\n    const stars = [];\n    const emptyStars = [];\n    for (let i = 0; i < rating; i++) {\n      stars.push(\n        <span key={i}>\n          <i className=\"fas fa-star\"></i>\n        </span>\n      );\n    }\n    for (let i = 0; i < empty; i++) {\n      emptyStars.push(<i className=\"far fa-star\" key={i}></i>);\n    }\n\n    return (\n      <>\n        <div className=\"navigation-arrows\">\n          <a href={`/show/${Number(this.props.match.params.id) - 1}`} className=\"hvr-grow large\">\n            <i className=\"fas fa-long-arrow-alt-left\"></i>\n            <small>Previous Show</small>\n          </a>\n          <a\n            href={`/show/${Number(this.props.match.params.id) + 1}`}\n            id=\"navigation-arrows__right\"\n            className=\"hvr-grow large\"\n          >\n            <i className=\"fas fa-long-arrow-alt-right\"></i>\n            <small>Next Show</small>\n          </a>\n        </div>\n        <div className=\"overlay\" id=\"single-show-overlay\">\n          <header\n            className=\"single-show-header\"\n            id=\"box\"\n            style={{\n              backgroundImage: `url(${showImg})`,\n            }}\n          ></header>\n        </div>\n        <section className=\"show-introduction\">\n          <div className=\"minimum-height\">\n            <img src={showImg} alt={single.name} />\n          </div>\n          <div>\n            <small className=\"star-ratings\">\n              {stars}\n              {emptyStars.map((star, index) => {\n                return <span key={index}>{star}</span>;\n              })}\n              <span className=\"rating-no\">{alternativeRating} / 5</span>\n            </small>\n            <h1>{single.name}</h1>\n            <small>{single.premiered}</small>\n            <p>{single.summary}</p>\n          </div>\n        </section>\n        <main>\n          <section className=\"single-show-container\">\n            <section className=\"show-info-container\">\n              <h5>Show Info</h5>\n              <div className=\"underline\">\n                <span>Status:</span>\n                <span>{single.status}</span>\n              </div>\n              <div className=\"underline\">\n                <span>Genres:</span>\n                <span>{showGenres}</span>\n              </div>\n              <div className=\"underline\">\n                <span>Streamed on:</span>\n                <span>{networkName}</span>\n              </div>\n              <div className=\"underline\">\n                <span>Language:</span>\n                <span>{single.language}</span>\n              </div>\n              <div className=\"underline\">\n                <span>Schedule:</span>\n                <span>\n                  {scheduleTime} - {scheduleDay}\n                </span>\n              </div>\n            </section>\n            <section>\n              <h5>Starring</h5>\n              <ul>\n                {cast.map((single, i) => {\n                  return (\n                    <Link\n                      to={{\n                        pathname: `/show/${this.props.match.params.id}/cast/${this.state.singleShow.name}/${single.person.id}`,\n                        state: { single },\n                      }}\n                      key={this.randomKey(20)}\n                      onClick={this.scrollToTop}\n                    >\n                      <li>\n                        <div className=\"cast-image\">\n                          <img src={single.person.image.medium} alt={single.person.name} />\n                        </div>\n                        <div className=\"cast-name\">{single.person.name}</div>\n                        <div>\n                          <small className=\"character-name\"> - {single.character.name}</small>\n                        </div>\n                      </li>\n                    </Link>\n                  );\n                })}\n              </ul>\n            </section>\n          </section>\n          <section className=\"seasons-episodes-container\">\n            <select name=\"filter\" className=\"filter\" onChange={this.filter}>\n              {season.map((single, index) => {\n                // To make the default option season 1 so there is no blank space, on inital view you see episodes displayed\n                index++;\n                return (\n                  <option value={`Season ${index}`} key={`Season ${index}`}>\n                    Season {index}\n                  </option>\n                );\n              })}\n            </select>\n            <div className=\"display-flex episodes-container\">\n              {episodes.map((single) => {\n                // Need to have an error message\n                if (this.state.filter === `Season ${single.season}`) {\n                  return (\n                    <Link\n                      to={{\n                        pathname: `/show/${this.props.match.params.id}/${this.state.singleShow.name}/episode/${single.id}`,\n                        state: { single },\n                      }}\n                      key={this.randomKey(20)}\n                      onClick={this.scrollToTop}\n                    >\n                      <div className=\"overlay\">\n                        <div\n                          className=\"single-episodes hvr-grow single-episode-image\"\n                          style={{\n                            backgroundImage: `url(${\n                              single.image !== null ? single.image.original : ''\n                            })`,\n                          }}\n                        ></div>\n                      </div>\n                      <section>\n                        <div className=\"image-text\">\n                          <span>\n                            {single.name} {single.number}\n                          </span>\n                          <span>Episode {single.number}</span>\n                        </div>\n                        <div className=\"image-text\">\n                          <span>{single.airdate}</span>\n                          <span>{single.runtime} Minutes</span>\n                        </div>\n                      </section>\n                      {/* </a> */}\n                    </Link>\n                  );\n                }\n              })}\n            </div>\n          </section>\n        </main>\n      </>\n    );\n  }\n}\n\nexport default SingleShow;\n","import React, { Component } from 'react';\nimport './style.scss';\n\nclass Search extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      search: '',\n    };\n  }\n\n  startSearch = (event) => {\n    const search = event.target.value;\n    this.setState({\n      search,\n    });\n    this.props.search(search);\n  };\n\n  render() {\n    return (\n      <div>\n        <form>\n          <input\n            type=\"search\"\n            name=\"search\"\n            value={this.state.search}\n            onChange={this.startSearch}\n            placeholder=\"Search...\"\n            autoComplete=\"off\"\n          />\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Search;\n","import React, { Component } from 'react';\nimport './style.scss';\n\nimport bannerImg from './../../browse-header.jpg';\n\nimport Search from './../../Components/Search';\nimport ShowCard from './../../Components/ShowCard';\n\nclass Browse extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      search: '',\n      filter: 'All',\n      genres: [\n        'Action',\n        'Adventure',\n        'Comedy',\n        'Crime',\n        'Drama',\n        'Family',\n        'Romance',\n        'Science-Fiction',\n        'Thriller',\n      ],\n    };\n  }\n\n  searchShows = (word) => {\n    this.setState({\n      search: word,\n    });\n  };\n\n  filter = (event) => {\n    event.preventDefault();\n    const filter = event.currentTarget.dataset.id;\n\n    this.setState({\n      filter,\n    });\n  };\n\n  render() {\n    return (\n      <>\n        <header\n          className=\"centered-header browse-banner-image\"\n          style={{\n            backgroundImage: `url(${bannerImg})`,\n          }}\n        ></header>\n        <section className=\"browse-header\">\n          <h1>Browse</h1>\n          <Search search={this.searchShows} />\n          <ul>\n            <li onClick={this.filter} data-id=\"All\" key=\"All\" className=\"hvr-underline-from-left\">\n              All\n            </li>\n            {this.state.genres.map((genre) => {\n              return (\n                <li\n                  onClick={this.filter}\n                  data-id={genre}\n                  key={genre}\n                  className=\"hvr-underline-from-left\"\n                >\n                  {genre}\n                </li>\n              );\n            })}\n          </ul>\n        </section>\n        <main className=\"container\">\n          <section className=\"display-flex\">\n            {this.props.shows.map((show) => {\n              if (show.rating.average !== null) {\n                if (show.name.toLowerCase().includes(this.state.search)) {\n                  if (show.genres.includes(this.state.filter)) {\n                    return <ShowCard key={show.id} {...show} />;\n                  } else if (this.state.filter === 'All') {\n                    return <ShowCard key={show.id} {...show} />;\n                  }\n                }\n              }\n            })}\n          </section>\n        </main>\n      </>\n    );\n  }\n}\n\nexport default Browse;\n","import React, { Component } from 'react';\nimport './style.scss';\n\nimport { Link } from 'react-router-dom';\n\nimport { getCasts } from './../../Services/casts';\n\nclass SingleCast extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cast: [],\n    };\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  fetchData() {\n    getCasts(this.props.match.params.id)\n      .then((cast) => {\n        this.setState({\n          cast,\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  scrollToTop() {\n    window.scrollTo({ top: 0, behavior: 'smooth' });\n  }\n\n  render() {\n    const person = this.props.location.state.single.person;\n    const character = this.props.location.state.single.character;\n    const cast = this.state.cast;\n\n    return (\n      <>\n        <header className=\"single-show-header\" id=\"box\">\n          <div className=\"breadcrumb\">\n            <a href=\"/\" className=\"hvr-underline-from-left\">\n              Home\n            </a>\n            <span>/</span>\n            <a\n              href={`/show/${this.props.match.params.id}`}\n              className=\"hvr-underline-from-left\"\n            >{`${this.props.match.params.name}`}</a>{' '}\n            <span>/</span>\n            <small href=\"/\">{person.name}</small>\n          </div>\n        </header>\n        <main className=\"single-cast\">\n          <section className=\"header-introduction\">\n            <img src={person.image.medium} alt={person.name} />\n            <div>\n              <h1>{person.name}</h1>\n              <small>Birthday: {person.birthday}</small>\n              <p>Born in: {person.country.name}</p>\n              <br />\n              <p>Character played: {character.name}</p>\n            </div>\n          </section>\n          <section className=\"associated-information\">\n            <h5>Associated Cast Members of {this.props.match.params.name}</h5>\n            <div className=\"cast-container\">\n              {cast.map((single, i) => {\n                return (\n                  <Link\n                    to={{\n                      pathname: `/show/${this.props.match.params.id}/cast/${this.props.match.params.name}/${single.person.id}`,\n                      state: { single },\n                    }}\n                    key={i}\n                    onClick={this.scrollToTop}\n                  >\n                    <div className=\"cast-overlay\">\n                      <div className=\"associate-cast\">\n                        <img src={single.person.image.medium} alt={single.person.name} />\n                        <h5>{single.person.name}</h5>\n                      </div>\n                    </div>\n                  </Link>\n                );\n              })}\n            </div>\n          </section>\n        </main>\n      </>\n    );\n  }\n}\n\nexport default SingleCast;\n","import React, { Component } from 'react';\nimport './style.scss';\n\nimport { Link } from 'react-router-dom';\n\nimport { getEpisodes } from './../../Services/episodes';\n\nclass SingleEpisode extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      episodes: [],\n    };\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  fetchData() {\n    getEpisodes(this.props.match.params.id)\n      .then((episodes) => {\n        this.setState({\n          episodes,\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  scrollToTop() {\n    window.scrollTo({ top: 0, behavior: 'smooth' });\n  }\n\n  render() {\n    const episode = this.props.location.state.single;\n    return (\n      <main className=\"single-cast episode\">\n        <header className=\"single-show-header\" id=\"box\">\n          <div className=\"breadcrumb\">\n            <a href=\"/\" className=\"hvr-underline-from-left\">\n              Home\n            </a>\n            <span>/</span>\n            <a\n              href={`/show/${this.props.match.params.id}`}\n              className=\"hvr-underline-from-left\"\n            >{`${this.props.match.params.name}`}</a>\n            <span>/</span>\n            <small href=\"/\">{episode.name}</small>\n          </div>\n        </header>\n        <section className=\"header-introduction\">\n          <div className=\"episode-header-img\">\n            <img src={episode.image.original} alt={episode.name} />\n          </div>\n          <div>\n            <h1>\n              {episode.name} -\n              <small>\n                Season: {episode.season}, Episode: {episode.number}\n              </small>\n            </h1>\n\n            <small>\n              Aired: {episode.airtime} - {episode.airdate}\n            </small>\n            <p>{episode.summary}</p>\n          </div>\n        </section>\n        <section className=\"associated-information\">\n          <h5>\n            Associated Episodes of Season {episode.season} on {this.props.match.params.name}\n          </h5>\n          <div className=\"cast-container episodes-associate-container\">\n            {this.state.episodes.map((single, i) => {\n              if (single.season === episode.season) {\n                return (\n                  <Link\n                    to={{\n                      pathname: `/show/${this.props.match.params.id}/${this.props.match.params.name}/episode/${single.id}`,\n                      state: { single },\n                    }}\n                    key={i}\n                    onClick={this.scrollToTop}\n                  >\n                    <div className=\"overlay\">\n                      <div\n                        className=\"associated-episodes\"\n                        style={{\n                          backgroundImage: `url(${\n                            single.image !== null ? single.image.original : ''\n                          })`,\n                        }}\n                      >\n                        <div>\n                          <h5>{single.name}</h5>\n                          <h5>Episode {single.number}</h5>\n                        </div>\n                      </div>\n                    </div>\n                  </Link>\n                );\n              }\n            })}\n          </div>\n        </section>\n      </main>\n    );\n  }\n}\n\nexport default SingleEpisode;\n","import React from 'react';\nimport './style.scss';\n\nconst Navigation = () => {\n  return (\n    <nav>\n      <a href=\"/\" className=\"logo hvr-float\">\n        TV Bland\n      </a>\n      {/* <a href=\"/\" className=\"home-icon\">\n        <i className=\"fas fa-home\"></i>\n      </a> */}\n      <a href=\"/browse\" className=\"search-icon hvr-float\">\n        <i className=\"fas fa-search\"></i>\n      </a>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import React, { Component } from 'react';\nimport './App.scss';\n\nimport { Route, Switch } from 'react-router';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport { getShows } from './Services/shows';\n\nimport HomePage from './Views/Homepage';\nimport SingleShow from './Views/SingleShow';\nimport Browse from './Views/Browse';\nimport SingleCast from './Views/SingleCast';\nimport SingleEpisode from './Views/SingleEpisode';\n\nimport Navigation from './Components/Navigation';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      shows: [],\n    };\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  fetchData() {\n    getShows()\n      .then((shows) => {\n        this.setState({\n          shows,\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Navigation />\n        <Router>\n          <Switch>\n            <Route\n              path=\"/\"\n              render={(props) => <HomePage {...props} shows={this.state.shows} />}\n              exact\n            />\n            <Route\n              path=\"/browse\"\n              render={(props) => <Browse {...props} shows={this.state.shows} />}\n              exact\n            />\n            <Route\n              path=\"/show/:id\"\n              render={(props) => <SingleShow {...props} shows={this.state.shows} />}\n              exact\n            />\n            <Route\n              path=\"/show/:id/cast/:name/:castID\"\n              render={(props) => <SingleCast {...props} shows={this.state.shows} />}\n              exact\n            />\n            <Route\n              path=\"/show/:id/:name/episode/:episodeID\"\n              render={(props) => <SingleEpisode {...props} shows={this.state.shows} />}\n              exact\n            />\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import axios from 'axios';\n\nconst getShows = () =>\n  new Promise((resolve, reject) => {\n    axios\n      .get('https://api.tvmaze.com/shows')\n      .then((result) => {\n        const shows = result.data;\n        resolve(shows);\n      })\n      .catch(reject);\n  });\n\nexport { getShows };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}